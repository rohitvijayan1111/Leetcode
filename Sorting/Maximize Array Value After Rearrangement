#User function Template for python3

class Solution:
    def Maximize(self, arr): 
        # Complete the function
        s=0
        
        def merge(arr,start,mid,end):
            left=arr[start:mid+1]
            right=arr[mid+1:end+1]
            i=j=0
            k=start
            
            while i<len(left) and j<len(right):
                if(left[i]<=right[j]):
                    arr[k]=left[i]
                    i+=1
                else:
                    arr[k]=right[j]
                    j+=1
                k+=1
            while i<len(left):
                arr[k]=left[i]
                i+=1
                k+=1
            while j<len(right):
                arr[k]=right[j]
                j+=1
                k+=1
            
        def mergeSort(arr,start,end):
            if(start<end):
                mid=start+(end-start)//2
                mergeSort(arr,start,mid)
                mergeSort(arr,mid+1,end)
                merge(arr,start,mid,end)
                
        mergeSort(arr,0,len(arr)-1)
        for i in range(len(arr)):
            s=(s+arr[i]*i)%(1000000007)      
        return s



#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    t = int(input())

    for _ in range(t):
        A = list(map(int, input().strip().split()))
        # k = int(input())
        ob = Solution()
        print(ob.Maximize(A))

# } Driver Code Ends
