class Solution:
    def minDays(self, grid: List[List[int]]) -> int:
        def countislands(grid):
            visited=[[False]* len(grid[0]) for _ in range(len(grid))]
            def dfs(i,j):
                if(i<0 or i>=len(grid) or j<0 or j>=len(grid[0]) or visited[i][j] or grid[i][j]==0):
                    return
                visited[i][j]=True
                dfs(i-1,j)
                dfs(i,j-1)
                dfs(i+1,j)
                dfs(i,j+1)
            islands=0
            for i in range(len(grid)):
                for j in range(len(grid[0])):
                    if(not visited[i][j] and grid[i][j]==1):
                        dfs(i,j)
                        islands+=1
            return islands
        
        if(countislands(grid)!=1):
            return 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if(grid[i][j]==1):
                    grid[i][j]=0
                    if(countislands(grid)!=1):
                        return 1
                    grid[i][j]=1
        return 2
