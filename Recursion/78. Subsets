Given an integer array nums of unique elements, return all possible 
subsets
 (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        res=[]
        def helper(l,c,n):
            if(c==n):
                res.append(l)
                return
            helper(l+[nums[c]],c+1,n)
            helper(l,c+1,n)
        helper([],0,len(nums))
        return res

The approach here is to use recursion and to call once including it and not including it
