#User function Template for python3

class Solution:
    def findPath(self, m, n):
        # code here
        res=[]
        def helper(s,i,j):
            if(i==n-1 and j==n-1 and m[i][j]==1):
                res.append(s)
                return
            elif(i<0 or j<0 or j>=n or i>=n or m[i][j]=="." or m[i][j]==0):
                return
            temp=m[i][j]
            m[i][j]="."
            helper(s+"U",i-1,j)
            helper(s+"D",i+1,j)
            helper(s+"L",i,j-1)
            helper(s+"R",i,j+1)
            m[i][j]=temp
        helper("",0,0)
        return res
#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__=='__main__':
    t = int(input())
    for i in range(t):
        n = list(map(int, input().strip().split()))
        arr = list(map(int, input().strip().split()))
        
        matrix = [[0 for i in range(n[0])]for j in range(n[0])]
        k=0
        for i in range(n[0]):
            for j in range(n[0]):
                matrix[i][j] = arr[k]
                k+=1
        ob = Solution()
        result = ob.findPath(matrix, n[0])
        result.sort()
        if len(result) == 0 :
            print(-1)
        else:
            for x in result:
                print(x,end = " ")
            print()
# } Driver Code Ends
