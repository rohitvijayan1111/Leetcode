Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.


class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        l=[]
        digimap={
            '2':"abc",
            '3':"def",
            '4':"ghi",
            '5':"jkl",
            '6':"mno",
            '7':"pqrs",
            '8':"tuv",
            '9':"wxyz"
        }
        def helper(i,s):
            if(len(s)==len(digits)):
                l.append(s)
                return
            for c in digimap[digits[i]]:
                helper(i+1,s+c)
        if(digits):
            helper(0,'')
        return l
