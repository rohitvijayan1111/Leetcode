A digit string is good if the digits (0-indexed) at even indices are even and the digits at odd indices are prime (2, 3, 5, or 7).
For example, "2582" is good because the digits (2 and 8) at even positions are even and the digits (5 and 2) at odd positions are prime. However, "3245" is not good because 3 is at an even index but is not even.
Given an integer n, return the total number of good digit strings of length n. Since the answer may be large, return it modulo 109 + 7.
A digit string is a string consisting of digits 0 through 9 that may contain leading zeros.

mod=pow(10,9)+7
class Solution:
    def power(self,x,n):
        if(n==0):
            return 1
        ans=self.power(x,n//2)
        ans=(ans*ans)%mod
        if(n%2!=0):
            ans*=x
            ans%=mod
        return ans
        
    def countGoodNumbers(self, n: int) -> int:
        even=(n//2)+(n%2)
        odd=n//2
        return (self.power(5,even)*self.power(4,odd))%mod

Logic here is that even position has 5 possibilities so even multiply 5 in even positions and prime no is 4.
