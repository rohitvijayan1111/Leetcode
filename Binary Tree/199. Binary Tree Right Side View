# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if(not root):
            return []
        d={}
        q=deque([[root,0]])
        while q:
            node,r=q.popleft()
            d[r]=node.val
            if(node.left):
                q.append([node.left,r+1])
            if(node.right):
                q.append([node.right,r+1])
        res=[]
        for i in sorted(d.keys()):
            res.append(d[i])
        return res
