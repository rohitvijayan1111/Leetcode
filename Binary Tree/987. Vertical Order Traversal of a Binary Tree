# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
        d=defaultdict(list)
        q=deque()
        q.append([root,0,0])
        while q:
            node,r,c=q.popleft()
            d[c].append([r,node.val])
            if(node.left):
                q.append([node.left,r+1,c-1])
            if(node.right):
                q.append([node.right,r+1,c+1])
        ans=[]
        for i in sorted(d.keys()):
            l=d[i]
            l.sort(key=lambda x:(x[0],x[1]))
            t=[]
            for i in l:
                t.append(i[1])
            ans.append(t)
        return ans
