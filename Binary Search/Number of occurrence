#User function Template for python3
class Solution:
    def binarysearch(self,arr,n,x,isStart):
        l=0
        ans=-1
        r=n-1
        while(l<=r):
            m=l+(r-l)//2
            if(arr[m]>x):
                r=m-1
            elif(arr[m]<x):
                l=m+1
            else:
                ans=m
                if(isStart):
                    r=m-1
                else:
                    l=m+1
        return ans
	def count(self,arr, n, x):
		# code here
		if(self.binarysearch(arr,n,x,False)!=-1 or self.binarysearch(arr,n,x,True)!=-1):
            return self.binarysearch(arr,n,x,False)-self.binarysearch(arr,n,x,True)+1
        else:
            return 0
#{ 
 # Driver Code Starts
#Initial Template for Python 3




if __name__ == '__main__':
    tc = int(input())
    while tc > 0:
        n, x = list(map(int, input().strip().split()))
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.count(arr, n, x)
        print(ans)
        tc -= 1

# } Driver Code Ends
